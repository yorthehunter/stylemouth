/* ==========================================================================
   Grid
   ========================================================================== */
/**
* Example:
* <div class="grid m-20">
*   <div class="g-i g-1-2">
*     Content
*   </div>
*   <div class="g-i g-1-2">
*     Content
*   </div>
* </div>
*/


/* Custom breakpoints
   ========================================================================== */

$media-width-xs: 480px;
$media-width-sm: 768px;
$media-width-md: 992px;
$media-width-lg: 1200px;
$media-width-xl: 1400px;

$small-media-width: 480px;
$medium-media-width: 768px;
$tablet-media-width: 1024px;


/* Container
   ========================================================================== */
/**
*  The container class, when included in the markup, will constrain the width
*  of the content area, based on defined media breakpoints.
*/

//.container {
//
//  @media (min-width: @screen-sm-min) {
//    width: @container-sm;
//  }
//  @media (min-width: @screen-md-min) {
//    width: @container-md;
//  }
//  @media (min-width: @screen-lg-min) {
//    width: @container-lg;
//  }
//}


/* Media breakpoint, super-simple version
   ========================================================================== */

@mixin media($media) {
  @if $media == xs {
    @media screen and (max-width: $media-width-xs) {
      @content;
    }
  } @else if $media == sm {
    @media screen and (max-width: $media-width-sm) and (min-width: ($media-width-xs + 1)) {
      @content;
    }
  } @else if $media == md {
    @media screen and (max-width: $media-width-md) and (min-width: ($media-width-sm + 1)) {
      @content;
    }
  } @else if $media == lg {
    @media screen and (max-width: $media-width-lg) and (min-width: ($media-width-md + 1)) {
      @content;
    }
  } @else if $media == xl {
    @media screen and (min-width: ($media-width-lg + 1)) {
      @content;
    }
  }
}



$grid-gutter: 20px;

/**
* 1. Fix for lists.
* 2. Negative margin to offset grid parent
*/

.grid {
  list-style:    none;         /* 1 */
  margin-left:  -$grid-gutter; /* 2 */
  padding:       0;
}

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 * 5. Negative right margin to fix the inline-block extra space
 */

.g {
  display:            inline-block; /* 1 */
  padding-left:       $grid-gutter; /* 2 */
  vertical-align:     top;          /* 3 */
  width:              100%;         /* 4 */
  -webkit-box-sizing: border-box;   /* 5 */
  -moz-box-sizing:    border-box;   /* 5 */
  box-sizing:         border-box;   /* 5 */
  margin-right:      -4px;          /* 6 */

  /* For debugging */
  background-color: lightyellow;
  outline: 1px dotted rgba(0,0,0,0.15);
 &:nth-child(odd) {
   background-color: lightpink;
 }
}



/* Widths */

._1-1,
._2_2,
._3_3,
._4_4,
._5_5,
._6_6 {
  width: 100%;
}
._1-2,
._2-4,
._3-6 {
  width: 50%;
  &.u-center { margin-left: -25%; }
}
._1-3,
._2-6 {
  width: 33.333%;
  &.u-center { margin-left: -16.666%; }
}
._2-3,
._4-6 {
  width: 66.666%;
  &.u-center { margin-left: -33.333%; }
}
._1-4 {
  width: 25%;
  &.u-center { margin-left: -12.5%; }
}
._3-4 {
  width: 75%;
  &.u-center { margin-left: -37.5%; }
}
._1-5 {
  width: 20%;
  &.u-center { margin-left: -10%; }
}
._2-5 {
  width: 40%;
  &.u-center { margin-left: -20%; }
}
._3-5 {
  width: 60%;
  &.u-center { margin-left: -30%; }
}
._4-5 {
  width: 80%;
  &.u-center { margin-left: -40%; }
}
._1-6 {
  width: 16.667%;
  &.u-center { margin-left: -8.333%; }
}
._5-6 {
  width: 83.333%;
  &.u-center { margin-left: -41.666%; }
}


@include media(xs) {
  body:before{
    content: 'xs';
  }

  ._1-1-xs,
  ._2_2-xs,
  ._3_3-xs,
  ._4_4-xs,
  ._5_5-xs,
  ._6_6-xs {
    width: 100%;
  }
  ._1-2-xs,
  ._2-4-xs,
  ._3-6-xs {
    width: 50%;
  }
  ._1-3-xs,
  ._2-6-xs {
    width: 33.333%;
  }
  ._2-3-xs,
  ._4-6-xs {
    width: 66.666%;
  }
  ._1-4-xs {
    width: 25%;
  }
  ._3-4-xs {
    width: 75%;
  }
  ._1-5-xs {
    width: 20%;
  }
  ._2-5-xs {
    width: 40%;
  }
  ._3-5-xs {
    width: 60%;
  }
  ._4-5-xs {
    width: 80%;
  }
  ._1-6-xs {
    width: 16.667%;
  }
  ._5-6-xs {
    width: 83.333%;
  }
}

@include media(sm) {
  body:before{
    content: 'sm';
  }

  ._1-1-sm,
  ._2_2-sm,
  ._3_3-sm,
  ._4_4-sm,
  ._5_5-sm,
  ._6_6-sm {
    width: 100%;
  }
  ._1-2-sm,
  ._2-4-sm,
  ._3-6-sm {
    width: 50%;
  }
  ._1-3-sm,
  ._2-6-sm {
    width: 33.333%;
  }
  ._2-3-sm,
  ._4-6-sm {
    width: 66.666%;
  }
  ._1-4-sm {
    width: 25%;
  }
  ._3-4-sm {
    width: 75%;
  }
  ._1-5-sm {
    width: 20%;
  }
  ._2-5-sm {
    width: 40%;
  }
  ._3-5-sm {
    width: 60%;
  }
  ._4-5-sm {
    width: 80%;
  }
  ._1-6-sm {
    width: 16.667%;
  }
  ._5-6-sm {
    width: 83.333%;
  }
}

@include media(md) {
  body:before{
    content: 'md';
  }

  ._1-1-md,
  ._2_2-md,
  ._3_3-md,
  ._4_4-md,
  ._5_5-md,
  ._6_6-md {
    width: 100%;
  }
  ._1-2-md,
  ._2-4-md,
  ._3-6-md {
    width: 50%;
  }
  ._1-3-md,
  ._2-6-md {
    width: 33.333%;
  }
  ._2-3-md,
  ._4-6-md {
    width: 66.666%;
  }
  ._1-4-md {
    width: 25%;
  }
  ._3-4-md {
    width: 75%;
  }
  ._1-5-md {
    width: 20%;
  }
  ._2-5-md {
    width: 40%;
  }
  ._3-5-md {
    width: 60%;
  }
  ._4-5-md {
    width: 80%;
  }
  ._1-6-md {
    width: 16.667%;
  }
  ._5-6-md {
    width: 83.333%;
  }
}

@include media(lg) {
  body:before{
    content: 'lg';
  }

  ._1-1-lg,
  ._2_2-lg,
  ._3_3-lg,
  ._4_4-lg,
  ._5_5-lg,
  ._6_6-lg {
    width: 100%;
  }
  ._1-2-lg,
  ._2-4-lg,
  ._3-6-lg {
    width: 50%;
  }
  ._1-3-lg,
  ._2-6-lg {
    width: 33.333%;
  }
  ._2-3-lg,
  ._4-6-lg {
    width: 66.666%;
  }
  ._1-4-lg {
    width: 25%;
  }
  ._3-4-lg {
    width: 75%;
  }
  ._1-5-lg {
    width: 20%;
  }
  ._2-5-lg {
    width: 40%;
  }
  ._3-5-lg {
    width: 60%;
  }
  ._4-5-lg {
    width: 80%;
  }
  ._1-6-lg {
    width: 16.667%;
  }
  ._5-6-lg {
    width: 83.333%;
  }
}

@include media(xl) {
  body:before{
    content: 'xl';
  }

  ._1-1-xl,
  ._2_2-xl,
  ._3_3-xl,
  ._4_4-xl,
  ._5_5-xl,
  ._6_6-xl {
    width: 100%;
  }
  ._1-2-xl,
  ._2-4-xl,
  ._3-6-xl {
    width: 50%;
  }
  ._1-3-xl,
  ._2-6-xl {
    width: 33.333%;
  }
  ._2-3-xl,
  ._4-6-xl {
    width: 66.666%;
  }
  ._1-4-xl {
    width: 25%;
  }
  ._3-4-xl {
    width: 75%;
  }
  ._1-5-xl {
    width: 20%;
  }
  ._2-5-xl {
    width: 40%;
  }
  ._3-5-xl {
    width: 60%;
  }
  ._4-5-xl {
    width: 80%;
  }
  ._1-6-xl {
    width: 16.667%;
  }
  ._5-6-xl {
    width: 83.333%;
  }
}







/**
 * Small media widths
 * Additional classes that only take effect in small media
 */

@media screen and (max-width: $small-media-width) {
  .g-small-1-1 {
    width: 100%;
  }
  .g-small-1-2 {
    width: 50%;
  }
  .g-small-1-3 {
    width: 33.333%;
  }
  .g-small-2-3 {
    width: 66.666%;
  }
  .g-small-1-4 {
    width: 25%;
  }
  .g-small-2-4 {
    width: 50%;
  }
  .g-small-3-4 {
    width: 75%;
  }
  /**
   * Uncomment to debug current breakpoint
   */
//  body:before{
//    content: 'small';
//  }
}

/**
 * Medium media widths
 * Additional classes that only take effect in medium media
 */

@media screen and (min-width: ($small-media-width)) and (max-width: $medium-media-width) {
  .g-medium-1-1 {
    width: 100%;
  }
  .g-medium-1-2 {
    width: 50%;
  }
  .g-medium-1-3 {
    width: 33.333%;
  }
  .g-medium-2-3 {
    width: 66.666%;
  }
  .g-medium-1-4 {
    width: 25%;
  }
  .g-medium-2-4 {
    width: 50%;
  }
  .g-medium-3-4 {
    width: 75%;
  }
  .g-medium-1-5 {
    width: 20%;
  }
  .g-medium-2-5 {
    width: 40%;
  }
  .g-medium-3-5 {
    width: 60%;
  }
  .g-medium-4-5 {
    width: 80%;
  }
  .g-medium-1-6 {
    width: 16.666%;
  }
  .g-medium-2-6 {
    width: 33.333%;
  }
  .g-medium-3-6 {
    width: 50%;
  }
  .g-medium-4-6 {
    width: 66.666%;
  }
  .g-medium-5-6 {
    width: 83.333%;
  }
  /**
   * Uncomment to debug current breakpoint
   */
//  body:before{
//    content: 'medium';
//  }
}

/**
 * Tablet (landscape) media widths
 * TODO needs name more consistent with others
 * Additional classes that only take effect in landscape tablet media
 */

@media screen and (min-width: ($medium-media-width)) and (max-width: $tablet-media-width) {
  .g-tablet-1-1 {
    width: 100%;
  }
  .g-tablet-1-2 {
    width: 50%;
  }
  .g-tablet-1-3 {
    width: 33.333%;
  }
  .g-tablet-2-3 {
    width: 66.666%;
  }
  .g-tablet-1-4 {
    width: 25%;
  }
  .g-tablet-2-4 {
    width: 50%;
  }
  .g-tablet-3-4 {
    width: 75%;
  }
  .g-tablet-1-5 {
    width: 20%;
  }
  .g-tablet-2-5 {
    width: 40%;
  }
  .g-tablet-3-5 {
    width: 60%;
  }
  .g-tablet-4-5 {
    width: 80%;
  }
  .g-tablet-1-6 {
    width: 16.666%;
  }
  .g-tablet-2-6 {
    width: 33.333%;
  }
  .g-tablet-3-6 {
    width: 50%;
  }
  .g-tablet-4-6 {
    width: 66.666%;
  }
  .g-tablet-5-6 {
    width: 83.333%;
  }
  /**
   * Uncomment to debug current breakpoint
   */
//  body:before{
//    content: 'tablet';
//  }
}

/* Utility classes
   ========================================================================== */

/**
 * Reverse grid
 * Presents columns in reverse order of the markup. Extends ".grid".
 */

.g-u-rev {
  direction: rtl;
  text-align: left;

  > .g-i {
    direction: ltr;
    text-align: left;
  }
}

/* Center align grid. Extends ".grid". */
.g-u-c {
  text-align: center;

  > .g-i {
    text-align: left;
  }

}

/* Right align grid. Extends ".grid". */
.g-u-r {
  text-align: right;

  > .g-i {
    text-align: left;
  }
}

/* Fixed column. Extends ".g-i". */
.g-fixed {
  position: fixed;
  left: 0;
  padding-top: 20px;

  @include media(small-media) {
    position: relative;
  }

  @include media(medium-media) {
    position: relative;
  }
}